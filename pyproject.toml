[project]
name = "afu"
version = "0.1.0"
description = "AFU - RL Library"
readme = "README.md"
requires-python = ">=3.12"
license = { text = "GPLv3" }
authors = [
  { name = "Paul Chambaz", email = "paul.chambaz@tutanota.com" },
  { name = "Frédéric Li Combeau", email = "fredlicombeau@gmail.com" },
]

[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["afu"]

[tool.black]
line-length = 82
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '\.ipynb$'
color = true

[tool.pylint]
max-line-length = 82
disable = ["C0111", "R0903", "C0103"]
good-names = [
  "i",
  "j",
  "k",
  "ex",
  "Run",
  "_",
  "x",
  "y",
  "z",
  "e",
  "n",
  "m",
  "f",
]
ignore = ["CVS"]
ignore-patterns = [".*"]
init-hook = 'import sys; sys.path.append(".")'
persistent = "yes"
fail-under = 9.0
output-format = "colorized"
msg-template = "{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}"

[tool.pytest]
testpaths = ["tests"]
python_files = ["test_*.py"]
showlocals = true
addopts = """
    --color=yes
    --code-highlight=yes
    --verbosity=2
    --cov=afu
    --cov-report=term-missing
    --cov-report=html
    """

[tool.coverage.run]
branch = true
source = ["afu"]
omit = ["tests/*", "setup.py"]

[tool.coverage.report]
fail_under = 80
show_missing = true
skip_empty = true
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if __name__ == .__main__.:",
  "raise NotImplementedError",
  "if TYPE_CHECKING:",
]
